server:
  port: 10031
spring:
  cloud:
    config:
      server:
        git:
          uri: https://github.com/renxinlin/config #（也可以是不同仓库的名称，这样隔离性强，项目之间不可见）
  application:
    name: config-server
    
    
    

# 高可用需要借助eureka实现只需要添加eureka即可,默认的高可用策略是轮询
# 此外bus动态感知只需要修改config client即可
# 通过url通知：调用服务端的/bus/refresh接口，不是去调用客户端的/bus/refresh接口
# 配置github的webhook（添加上述url）则自动调用上述的url


eureka:
  client:
    service-url:
      defaultZone: http://user:password123@localhost:9001/eureka
    registry-fetch-interval-seconds: 30 
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ipAddress}:${spring.application.instance_id:${server.port}}   
    
    
# 客户端由服务url改变成访问服务名称
#spring:
#  application:
#    name: config-client
#  cloud:
#    config:
#      uri: http://localhost:8769
#      fail-fast: true
#  profiles:
#    active: dev


---
#spring:
#  application:
#    name: config-client
#  cloud:
#    config:
##      uri: http://localhost:8769
#      fail-fast: true
#      discovery:
#        enabled: true
#        serviceId: config-server
